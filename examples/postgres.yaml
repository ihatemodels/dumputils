log:
  # choices: json|human
  type: human
  # choices: debug|info|warn|error
  level: "info"

databases:
  # dump single database example
  - name: "sales-east"
    host: 192.168.1.3
    port: 5432
    database: sales
    username: postgres
    password: postgres
    version: 14
    # enabling this will pass the -v flag to pg_dump
    # all collected output will be printed as info log message
    verbose: true
    dumpAll: false
    dumpServer: false

  # dump all databases in separate dumps example
  - name: "sales-reporting-west"
    host: 192.168.1.3
    port: 5432
    username: postgres
    password: postgres
    version: 13
    verbose: true
    # this will dump all databases in separate
    # files using the pg_dump bin
    dumpAll: true
    # comma separated databases names to exclude from dumping
    # works only when dumpAll is set to true
    excludeDatabases: "sales_west, sales_reporting"

    dumpServer: false

  # dump the whole server example
  - name: "sales-server-west"
    host: 192.168.1.3
    port: 5432
    username: postgres
    password: postgres
    version: 11
    verbose: true
    dumpAll: false
    # this will dump the whole server using pg_dumpall
    dumpServer: true

# configure where to store generated backup files
output:
  # This is the base directory used
  # as temporary storage when backups are created.
  # Created files will be deleted after termination.
  baseDir: /opt/backups
  minio:
    enabled: true
    endpoint: "minio.local"
    accessKeyID: admin
    bucketName: test
    secretAccessKey: admin"

notifiers:
  email:
    enabled: true
  slack:
    enabled: true
    # if this flag is true notifications
    # will be sent not only on failures
    # but on successful backups as well
    verbose: true
    botToken: "xoxb-not-a-real-token-this-will-not-work"
    channel: dumputils_alerts

